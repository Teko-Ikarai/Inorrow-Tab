{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["import { argbFromHex, themeFromSourceColor, themeFromImage, hexFromArgb, Theme, CustomColor } from '@material/material-color-utilities'\r\n\r\nexport { hexFromArgb, argbFromHex }\r\n\r\nconst customs = [\r\n  { value: argbFromHex('#008000'), name: 'success', blend: true },\r\n  { value: argbFromHex('#ffebcd'), name: 'warning', blend: true }\r\n]\r\n\r\nconst getTheme = (theme: Theme) => {\r\n  const { palettes, schemes: { light, dark } } = theme\r\n  const colors: { [key: string]: string } = {\r\n    '--s-color-scrim': hexFromArgb(light.scrim),\r\n    '--s-color-primary': hexFromArgb(light.primary),\r\n    '--s-color-on-primary': hexFromArgb(light.onPrimary),\r\n    '--s-color-primary-container': hexFromArgb(light.primaryContainer),\r\n    '--s-color-on-primary-container': hexFromArgb(light.onPrimaryContainer),\r\n    '--s-color-secondary': hexFromArgb(light.secondary),\r\n    '--s-color-on-secondary': hexFromArgb(light.onSecondary),\r\n    '--s-color-secondary-container': hexFromArgb(light.secondaryContainer),\r\n    '--s-color-on-secondary-container': hexFromArgb(light.onSecondaryContainer),\r\n    '--s-color-tertiary': hexFromArgb(light.tertiary),\r\n    '--s-color-on-tertiary': hexFromArgb(light.onTertiary),\r\n    '--s-color-tertiary-container': hexFromArgb(light.tertiaryContainer),\r\n    '--s-color-on-tertiary-container': hexFromArgb(light.onTertiaryContainer),\r\n    '--s-color-error': hexFromArgb(light.error),\r\n    '--s-color-on-error': hexFromArgb(light.onError),\r\n    '--s-color-error-container': hexFromArgb(light.errorContainer),\r\n    '--s-color-on-error-container': hexFromArgb(light.onErrorContainer),\r\n    '--s-color-background': hexFromArgb(light.background),\r\n    '--s-color-on-background': hexFromArgb(light.onBackground),\r\n    '--s-color-outline': hexFromArgb(light.outline),\r\n    '--s-color-outline-variant': hexFromArgb(light.outlineVariant),\r\n    '--s-color-surface': hexFromArgb(light.surface),\r\n    '--s-color-on-surface': hexFromArgb(light.onSurface),\r\n    '--s-color-surface-variant': hexFromArgb(light.surfaceVariant),\r\n    '--s-color-on-surface-variant': hexFromArgb(light.onSurfaceVariant),\r\n    '--s-color-inverse-surface': hexFromArgb(light.inverseSurface),\r\n    '--s-color-inverse-on-surface': hexFromArgb(light.inverseOnSurface),\r\n    '--s-color-inverse-primary': hexFromArgb(light.inversePrimary),\r\n    '--s-color-surface-container-lowest': hexFromArgb(palettes.neutral.tone(100)),\r\n    '--s-color-surface-container-low': hexFromArgb(palettes.neutral.tone(96)),\r\n    '--s-color-surface-container': hexFromArgb(palettes.neutral.tone(94)),\r\n    '--s-color-surface-container-high': hexFromArgb(palettes.neutral.tone(92)),\r\n    '--s-color-surface-container-highest': hexFromArgb(palettes.neutral.tone(90)),\r\n    '--s-color-dark-scrim': hexFromArgb(dark.scrim),\r\n    '--s-color-dark-primary': hexFromArgb(dark.primary),\r\n    '--s-color-dark-on-primary': hexFromArgb(dark.onPrimary),\r\n    '--s-color-dark-primary-container': hexFromArgb(dark.primaryContainer),\r\n    '--s-color-dark-on-primary-container': hexFromArgb(dark.onPrimaryContainer),\r\n    '--s-color-dark-secondary': hexFromArgb(dark.secondary),\r\n    '--s-color-dark-on-secondary': hexFromArgb(dark.onSecondary),\r\n    '--s-color-dark-secondary-container': hexFromArgb(dark.secondaryContainer),\r\n    '--s-color-dark-on-secondary-container': hexFromArgb(dark.onSecondaryContainer),\r\n    '--s-color-dark-tertiary': hexFromArgb(dark.tertiary),\r\n    '--s-color-dark-on-tertiary': hexFromArgb(dark.onTertiary),\r\n    '--s-color-dark-tertiary-container': hexFromArgb(dark.tertiaryContainer),\r\n    '--s-color-dark-on-tertiary-container': hexFromArgb(dark.onTertiaryContainer),\r\n    '--s-color-dark-error': hexFromArgb(dark.error),\r\n    '--s-color-dark-on-error': hexFromArgb(dark.onError),\r\n    '--s-color-dark-error-container': hexFromArgb(dark.errorContainer),\r\n    '--s-color-dark-on-error-container': hexFromArgb(dark.onErrorContainer),\r\n    '--s-color-dark-background': hexFromArgb(dark.background),\r\n    '--s-color-dark-on-background': hexFromArgb(dark.onBackground),\r\n    '--s-color-dark-outline': hexFromArgb(dark.outline),\r\n    '--s-color-dark-outline-variant': hexFromArgb(dark.outlineVariant),\r\n    '--s-color-dark-surface': hexFromArgb(dark.surface),\r\n    '--s-color-dark-on-surface': hexFromArgb(dark.onSurface),\r\n    '--s-color-dark-surface-variant': hexFromArgb(dark.surfaceVariant),\r\n    '--s-color-dark-on-surface-variant': hexFromArgb(dark.onSurfaceVariant),\r\n    '--s-color-dark-inverse-surface': hexFromArgb(dark.inverseSurface),\r\n    '--s-color-dark-inverse-on-surface': hexFromArgb(dark.inverseOnSurface),\r\n    '--s-color-dark-inverse-primary': hexFromArgb(dark.inversePrimary),\r\n    '--s-color-dark-surface-container-lowest': hexFromArgb(palettes.neutral.tone(4)),\r\n    '--s-color-dark-surface-container-low': hexFromArgb(palettes.neutral.tone(10)),\r\n    '--s-color-dark-surface-container': hexFromArgb(palettes.neutral.tone(12)),\r\n    '--s-color-dark-surface-container-high': hexFromArgb(palettes.neutral.tone(17)),\r\n    '--s-color-dark-surface-container-highest': hexFromArgb(palettes.neutral.tone(22)),\r\n  }\r\n  const inside = theme.customColors.slice(0, customs.length)\r\n  const outside = theme.customColors.slice(customs.length)\r\n  for (const item of inside) {\r\n    colors[`--s-color-${item.color.name}`] = hexFromArgb(item.light.color)\r\n    colors[`--s-color-on-${item.color.name}`] = hexFromArgb(item.light.onColor)\r\n    colors[`--s-color-${item.color.name}-container`] = hexFromArgb(item.light.colorContainer)\r\n    colors[`--s-color-on-${item.color.name}-container`] = hexFromArgb(item.light.onColorContainer)\r\n    colors[`--s-color-dark-${item.color.name}`] = hexFromArgb(item.dark.color)\r\n    colors[`--s-color-dark-on-${item.color.name}`] = hexFromArgb(item.dark.onColor)\r\n    colors[`--s-color-dark-${item.color.name}-container`] = hexFromArgb(item.dark.colorContainer)\r\n    colors[`--s-color-dark-on-${item.color.name}-container`] = hexFromArgb(item.dark.onColorContainer)\r\n  }\r\n  const customColors: { [key: string]: string } = {}\r\n  for (const item of outside) {\r\n    customColors[`${item.color.name}`] = hexFromArgb(item.light.color)\r\n    customColors[`on-${item.color.name}`] = hexFromArgb(item.light.onColor)\r\n    customColors[`${item.color.name}-container`] = hexFromArgb(item.light.colorContainer)\r\n    customColors[`on-${item.color.name}-container`] = hexFromArgb(item.light.onColorContainer)\r\n    customColors[`dark-${item.color.name}`] = hexFromArgb(item.dark.color)\r\n    customColors[`dark-on-${item.color.name}`] = hexFromArgb(item.dark.onColor)\r\n    customColors[`dark-${item.color.name}-container`] = hexFromArgb(item.dark.colorContainer)\r\n    customColors[`dark-on-${item.color.name}-container`] = hexFromArgb(item.dark.onColorContainer)\r\n  }\r\n  return {\r\n    theme, colors, customColors,\r\n    toString: () => {\r\n      let str = ''\r\n      for (const key in colors) {\r\n        str += `${key}: ${colors[key]};\\n`\r\n      }\r\n      return str.trimEnd()\r\n    }\r\n  }\r\n}\r\n\r\nexport const createScheme = (source: string | number | File | HTMLImageElement, options?: { page?: HTMLElement, customColor?: CustomColor[] }) => {\r\n  const customColor = [...options?.customColor ?? [], ...customs]\r\n  const setPage = (style: string) => options?.page && (options.page.style.cssText = style)\r\n  return new Promise<ReturnType<typeof getTheme>>(async (resolve, reject) => {\r\n    if (typeof source === 'number' || typeof source === 'string') {\r\n      const theme = getTheme(themeFromSourceColor(typeof source === 'number' ? source : argbFromHex(source), customColor))\r\n      setPage(theme.toString())\r\n      resolve(theme)\r\n      return\r\n    }\r\n    if (source instanceof HTMLImageElement) {\r\n      const theme = getTheme(await themeFromImage(source, customColor))\r\n      setPage(theme.toString())\r\n      resolve(theme)\r\n      return\r\n    }\r\n    if (source instanceof File) {\r\n      const img = new Image()\r\n      img.src = URL.createObjectURL(source)\r\n      img.onload = async () => {\r\n        const theme = getTheme(await themeFromImage(img, customColor))\r\n        setPage(theme.toString())\r\n        resolve(theme)\r\n      }\r\n      img.onerror = reject\r\n    }\r\n  })\r\n}"],
  "mappings": "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",
  "names": []
}
